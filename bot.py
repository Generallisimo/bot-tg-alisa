import asyncio
import logging
from atexit import register
from cgitb import text
from email import message

from click import command
from numpy import row_stack
from pandas import Interval
from pip import main
import config
import logging

from aiogram.utils.markdown import hide_link
from aiogram.types import ReplyKeyboardMarkup, ReplyKeyboardRemove, KeyboardButton, InlineKeyboardButton, InlineKeyboardMarkup
from aiogram import Bot, Dispatcher, executor, types
from aiogram.types.message import ContentType



#log
logging.basicConfig(level=logging.INFO)

#init
bot = Bot(token=config.TOKEN)
dp = Dispatcher(bot)


#–∫–Ω–æ–ø–∫–∞ 1 –ø–µ—Ä–≤–æ–≥–æ —Ä–∞–∑–≤–∏—Ç–∏—è
# inl_btn1=InlineKeyboardButton('–ø–æ–∫–∞–∑–∞—Ç—å —Ç–∞—Ä–∏—Ñ—ã üëÄ', callback_data='button1')
inl_kb1=InlineKeyboardMarkup().add(InlineKeyboardButton('–ø–æ–∫–∞–∑–∞—Ç—å —Ç–∞—Ä–∏—Ñ—ã üëÄ', callback_data='button1'))



#–∫–Ω–æ–ø–∫–∞ 2 —Ä–∞–∑–≤–∏—Ç–∏—è 
inl_btn2=InlineKeyboardMarkup(row_width=1).add(InlineKeyboardButton(text='–ù–µ–¥–µ–ª—é - 500 ‚ÇΩ', callback_data='button2'),
                                                InlineKeyboardButton(text='–ú–µ—Å—è—Ü -  1000 ‚ÇΩ', callback_data='button3'),
                                                InlineKeyboardButton(text='–ù–∞–≤—Å–µ–≥–¥–∞ - 1500 ‚ÇΩ', callback_data='button4'))



#–∫–Ω–æ–ø–∫–∞ 3 —Ä–∞–∑–≤–∏—Ç–∏—è
inl_btn5=InlineKeyboardMarkup(row_width=1).add(InlineKeyboardButton(text='–Ø –æ–ø–ª–∞—Ç–∏–ª ‚úÖ', callback_data='button5'),
                                                InlineKeyboardButton(text='–û—Ç–º–µ–Ω–∞ ‚óÄÔ∏è', callback_data='button6'))




#–∫–Ω–æ–ø–∫–∞ 4 —Ä–∞–∑–≤–∏—Ç–∏—è
inl_btn7=InlineKeyboardMarkup().add(InlineKeyboardButton(text='–°–∫–∏–Ω—É–ª!', callback_data='button7'))


CHAT_ID='5544649143'






#photo
photo1 = open('photo/1.jpg', 'rb')
photo2 = open('photo/2.jpg', 'rb')
photo3 = open('photo/3.jpg', 'rb')
photo4 = open('photo/4.jpg', 'rb')



# —Å–∫—Ä–∏–Ω—à–æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
@dp.message_handler(content_types=types.ContentTypes.PHOTO)
async def send_to_admin(message: types.Message):
    await bot.send_photo(CHAT_ID, photo=message.photo[0].file_id)
    #  await message.answer(text='–í—Å–µ –ø—Ä–æ—à–ª–æ —É—Å–ø–µ—à–Ω–æ, –º–∞–ª—ã—àüòè')
    await message.answer_photo(photo=open('photo/3.jpg', 'rb'), caption='–£—Ä–∞! –°–∫–æ—Ä–µ–µ –ø–µ—Ä–µ—Ö–æ–¥–∏ –ø–æ —Å—Å—ã–ª–∫–µ –Ω–∏–∂–µ üîó –ü–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ–ø–ª–∞—Ç—ã —Ç–µ–±–µ –±—É–¥–µ—Ç –æ—Ç–∫—Ä—ã—Ç –¥–æ—Å—Ç—É–ø –≤ –∫–∞–Ω–∞–ª üòò\n \n–í—Ç—É–ø–∏—Ç—å –≤ –∫–∞–Ω–∞–ª: https://t.me/+N7_Y1aDa3u0xMTY9' )



#start
@dp.message_handler(commands=["start"])
async def cmd_start(mess: types.Message):
    # await bot.send_photo(CHAT_ID, photo=message.photo[0].file_id, caption='dd')

    # await bot.send_photo(CHAT_ID, photo=message.photo[-1].file_id, caption=('–ü—Ä–∏–≤–µ—Ç üëã –ú–µ–Ω—è –∑–æ–≤—É—Ç –ê–ª–∏—Å–∞. –Ø –±–ª–æ–≥–≥–µ—Ä - –≤—ã–∫–ª–∞–¥—ã–≤–∞—é —Å–≤–æ–∏ –≥–æ—Ä—è—á–∏–µ —Ñ–æ—Ç–æ –∏ –≤–∏–¥–µ–æ üòõ –õ—é–±–ª—é –ø–æ–∫–∞–∑–∞—Ç—å —Å–≤–æ—ë —Ç–µ–ª–æ –Ω–∞ –∫–∞–º–µ—Ä—É –∏ –æ–±–æ–∂–∞—é –≤–Ω–∏–º–∞–Ω–∏–µ –∫ —Å–µ–±–µ. –ü–æ–¥–Ω–∏–º—É —Ç–≤–æ–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ –∏ –Ω–µ —Ç–æ–ª—å–∫–æ üçÜ\n\n–≠—Ç–æ—Ç –±–æ—Ç –ø–æ–º–æ–∂–µ—Ç —Ç–µ–±–µ –æ–∫–∞–∑–∞—Ç—å—Å—è –≤ –º–æ–µ–º VIP- –∫–∞–Ω–∞–ª–µ üîû'), reply_markup=inl_kb1)
    await mess.answer_photo(photo=open('photo/1.jpg', 'rb'), caption='–ü—Ä–∏–≤–µ—Ç üëã –ú–µ–Ω—è –∑–æ–≤—É—Ç –ê–ª–∏—Å–∞. –Ø –±–ª–æ–≥–≥–µ—Ä - –≤—ã–∫–ª–∞–¥—ã–≤–∞—é —Å–≤–æ–∏ –≥–æ—Ä—è—á–∏–µ —Ñ–æ—Ç–æ –∏ –≤–∏–¥–µ–æ üòõ –õ—é–±–ª—é –ø–æ–∫–∞–∑–∞—Ç—å —Å–≤–æ—ë —Ç–µ–ª–æ –Ω–∞ –∫–∞–º–µ—Ä—É –∏ –æ–±–æ–∂–∞—é –≤–Ω–∏–º–∞–Ω–∏–µ –∫ —Å–µ–±–µ. –ü–æ–¥–Ω–∏–º—É —Ç–≤–æ–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ –∏ –Ω–µ —Ç–æ–ª—å–∫–æ üçÜ\n\n–≠—Ç–æ—Ç –±–æ—Ç –ø–æ–º–æ–∂–µ—Ç —Ç–µ–±–µ –æ–∫–∞–∑–∞—Ç—å—Å—è –≤ –º–æ–µ–º VIP- –∫–∞–Ω–∞–ª–µ üîû', reply_markup=inl_kb1)
    # await mess.delete()





#–ü–µ—Ä–≤–æ–µ —Ä–∞–∑–≤–∏—Ç–∏–µ
@dp.callback_query_handler(text='button1')
async def but_call(callback: types.CallbackQuery):
    await callback.message.answer_photo(photo=open('photo/2.jpg', 'rb'), caption='–ü–æ–ª—É—á–∏ –¥–æ—Å—Ç—É–ø –∫ —ç–∫–ª—é–∑–∏–≤–Ω—ã–º —Ñ–æ—Ç–æ –∏ –≤–∏–¥–µ —Å–æ –º–Ω–æ–π üî•\n–•–æ—á—É –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞...', reply_markup=inl_btn2)
    # await callback.message.delete()
    # await callback.answer("GOOD", show_alert=True) —á—Ç–æ–±—ã –≤—ã—Å–∫–∞—á–∏–ª–æ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ






#–í—Ç–æ—Ä–æ–µ —Ä–∞–∑–≤–∏—Ç–∏–µ
@dp.callback_query_handler(text='button2')
async def but_call2(callback: types.CallbackQuery):
    await callback.message.answer('–ß—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –æ–ø–ª–∞—Ç–∏—Ç–µ 500 —Ä—É–±. –ø–æ —Å–ª–µ–¥—É—é—â–∏–π —Ä–µ–∫–≤–∏–∑–∏—Ç–∞–º:\nüí≥ –±–∞–Ω–∫–æ–≤—Å–∫–∞—è –∫–∞—Ä—Ç–∞: 0000 0000 0000 0000', reply_markup=inl_btn5)
    # await callback.message.delete()
    

@dp.callback_query_handler(text='button3')
async def but_call2(callback: types.CallbackQuery):
    await callback.message.answer('–ß—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –æ–ø–ª–∞—Ç–∏—Ç–µ 1000 —Ä—É–±. –ø–æ —Å–ª–µ–¥—É—é—â–∏–π —Ä–µ–∫–≤–∏–∑–∏—Ç–∞–º:\nüí≥ –±–∞–Ω–∫–æ–≤—Å–∫–∞—è –∫–∞—Ä—Ç–∞: 0000 0000 0000 0000', reply_markup=inl_btn5)
    # await callback.message.delete()



@dp.callback_query_handler(text='button4')
async def but_call2(callback: types.CallbackQuery):
    await callback.message.answer('–ß—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –æ–ø–ª–∞—Ç–∏—Ç–µ 1500 —Ä—É–±. –ø–æ —Å–ª–µ–¥—É—é—â–∏–π —Ä–µ–∫–≤–∏–∑–∏—Ç–∞–º:\nüí≥ –±–∞–Ω–∫–æ–≤—Å–∫–∞—è –∫–∞—Ä—Ç–∞: 0000 0000 0000 0000', reply_markup=inl_btn5)
    # await callback.message.delete()








#–∫–Ω–æ–ø–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞
@dp.callback_query_handler(text='button6')
async def but_call(callback: types.CallbackQuery):
    # await bot.send_photo(chat_id=message.from_user.id, photo=open('photo/4.jpg', 'rb'), caption=('–ü–æ–ª—É—á–∏ –¥–æ—Å—Ç—É–ø –∫ —ç–∫–ª—é–∑–∏–≤–Ω—ã–º —Ñ–æ—Ç–æ –∏ –≤–∏–¥–µ —Å–æ –º–Ω–æ–π üî•\n–•–æ—á—É –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞...'), reply_markup=inl_btn2)
    await callback.message.answer_photo(photo=open('photo/4.jpg', 'rb'),caption='–ü–æ–ª—É—á–∏ –¥–æ—Å—Ç—É–ø –∫ —ç–∫–ª—é–∑–∏–≤–Ω—ã–º —Ñ–æ—Ç–æ –∏ –≤–∏–¥–µ–æ —Å–æ –º–Ω–æ–π üî•\n–•–æ—á—É –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞...', reply_markup=inl_btn2 )
    # await callback.message.delete()








#–æ–ø–ª–∞—Ç–∞
@dp.callback_query_handler(text='button5')
async def but_call5(callback: types.CallbackQuery):
    await callback.message.answer(text='–¢—ã –ø–æ—á—Ç–∏ —É —Ü–µ–ª–∏ üßæ –û—Ç–ø—Ä–∞–≤—å —Å–∫—Ä–∏–Ω—à–æ—Ç –ø–µ—Ä–µ–≤–æ–¥–∞ –±–æ—Ç—É')
    
    # await callback.message.delete()
    # await callback.answer()




# #—Ñ–∏–Ω–∏—à
# @dp.callback_query_handler(text='button7')
# async def but_call6(callback: types.CallbackQuery):
#     await callback.message.answer_photo(photo=open('photo/3.jpg', 'rb'), caption='–£—Ä–∞! –°–∫–æ—Ä–µ–µ –ø–µ—Ä–µ—Ö–æ–¥–∏ –ø–æ —Å—Å—ã–ª–∫–µ –Ω–∏–∂–µ üîó –ü–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ–ø–ª–∞—Ç—ã —Ç–µ–±–µ –±—É–¥–µ—Ç –æ—Ç–∫—Ä—ã—Ç –¥–æ—Å—Ç—É–ø –≤ –∫–∞–Ω–∞–ª üòò\n \n–í—Ç—É–ø–∏—Ç—å –≤ –∫–∞–Ω–∞–ª: https://t.me/+N7_Y1aDa3u0xMTY9' )
#     # await callback.answer()





#–Ω–∞ —Ç—É–ø—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
@dp.message_handler()
async def echomes(msg: types.Message):
    await bot.send_message(msg.from_id ,text='–ú–∞–ª—ã—àüôà —É –º–µ–Ω—è —Ç–æ–ª—å–∫–æ –∫–æ–º–∞–Ω–¥–∞ /start')










# —Å–ø–æ—Å–æ–± –∑–∞–ø—É—Å–∫–∞
if __name__ == "__main__":
    executor.start_polling(dp, skip_updates = False)

